{"name":"Lua-resty-socks5","tagline":"Lua SOCKS5 client for the ngx_lua based on the cosocket AP","body":"This module contains the following functions:\r\n\r\n * `socks5.auth(cosocket)` - authenticate to SOCKS5\r\n    server (method \"no authentication\" is used).\r\n    Cosocket must be connected to SOCKS5 server\r\n * `socks5.connect(cosocket, host, port)` - tell\r\n    SOCKS5 server to connect to target host:port.\r\n    Host must be domain name\r\n * `socks5.handle_request(socks5host, socks5port,\r\n    request_changer?, response_changer?)` -\r\n    creates cosocket, authenticates to SOCKS5 server\r\n    (defined by socks5host, socks5port),\r\n    connects to target host:port (defined in ngx.req),\r\n    receive request headers and body, send them\r\n    through SOCKS5 server to target,\r\n    then receive response headers and body,\r\n    send them to client.\r\n\r\n    Optional function `request_changer` is applied to\r\n    request before sending it to target.\r\n    Optional function `response_changer` is applied to\r\n    response before sending it to client.\r\n\r\nHow to use this module to proxy all requests through Tor:\r\n\r\n```nginx\r\nserver {\r\n    listen 80;\r\n    server_name ip4.me; # must be in request header\r\n    location / {\r\n        default_type text/html;\r\n        content_by_lua '\r\n        require(\"socks5\").handle_request(\"127.0.0.1\", 9050)\r\n        ';\r\n    }\r\n}\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}